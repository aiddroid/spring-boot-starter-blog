<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.ArticleDao">
    <resultMap type="com.example.demo.pojo.Article" id="ArticleList">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="slug" column="slug"/>
        <result property="content" column="content"/>
        <result property="uid" column="uid" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <!--查询的结果通过上面定义的ArticleList解析-->
    <select id="getById" parameterType="Long" resultMap="ArticleList">
        SELECT * FROM article WHERE id = #{id}
    </select>
    
    <!--查询的结果通过上面定义的ArticleList解析-->
    <select id="getList" parameterType="HashMap" resultMap="ArticleList">
        SELECT * FROM article ORDER BY id DESC LIMIT #{offset}, #{count}
    </select>
    
    <!--查询的结果通过上面定义的ArticleList解析-->
    <select id="getAll" resultMap="ArticleList">
        SELECT * FROM article ORDER BY id DESC
    </select>
    
    <!--参数通过HashMap传递-->
    <insert id="add" parameterType="HashMap">
        INSERT INTO article VALUES(NULL, #{title}, #{slug}, #{content}, #{uid}, #{createdAt}, #{updatedAt})
    </insert>
    
    <!--参数通过HashMap传递-->
    <update id="update" parameterType="HashMap">
        UPDATE article SET title = #{title}, slug = #{slug}, content = #{content}, updated_at = #{updatedAt} WHERE id = #{id}
    </update>
    
    <delete id="delete" parameterType="Long">
        DELETE FROM article WHERE id = #{id}
    </delete>
    
    <!--指定返回值类型为Long-->
    <select id="getTotalCount" resultType="Integer">
        SELECT COUNT(id) FROM article
    </select>
</mapper>